<html>
<head>
<script>
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-89930792-1', 'auto');
  ga('send', 'pageview');

</script>
<title>Rick Umali's Home Page</title>
<meta name="description" content="Yet Another Personal Web Page">
<meta name="keywords" content="Rick Umali, Rodrigo Umali">
<meta name="generator" content="Rick Umali">

<link rel="alternate" type="application/atom+xml" title="Rick's Ramblings" href="http://feeds.feedburner.com/RicksRamblings" />
<link rel="alternate" type="application/rss+xml" title="Rick's Tech Talk" href="http://tech.rickumali.com/rss.xml" />
<link rel="alternate" type="application/rss+xml" title="Rick on Sports" href="http://feeds.feedburner.com/RickOnSports" />
<link rel="alternate" type="application/rss+xml" title="Rick's Flickr Photos" href="http://api.flickr.com/services/feeds/photos_public.gne?id=69224449@N00&lang=en-us&format=rss_200" />

<link rel="stylesheet" type="text/css" href="http://yui.yahooapis.com/2.4.0/build/reset-fonts-grids/reset-fonts-grids.css" /> 
<link rel="stylesheet" type="text/css" href="http://yui.yahooapis.com/2.4.0/build/base/base-min.css" /> 

<link rel="stylesheet" type="text/css" href="http://yui.yahooapis.com/2.4.0/build/tabview/assets/skins/sam/tabview.css"> 

<script type="text/javascript" src="http://yui.yahooapis.com/2.4.0/build/yahoo-dom-event/yahoo-dom-event.js"></script>
<script type="text/javascript" src="http://yui.yahooapis.com/2.4.0/build/element/element-beta-min.js"></script>
<script type="text/javascript" src="http://yui.yahooapis.com/2.4.0/build/tabview/tabview-min.js"></script> 
<script type="text/javascript" src="http://yui.yahooapis.com/2.4.0/build/history/history-min.js"></script> 

<style type="text/css">
#hd { 
  margin-bottom: -25px;
}
.yui-nav { 
  text-align: center;
}
#ft { 
  margin-top: 15px;
  margin-left: 45px;
  margin-right: 45px;
  text-align: center;
}
#bio {
  margin-top: 15px;
}
#blog {
  margin-top: 15px;
}
#tech {
  margin-top: 15px;
}
#sports {
  margin-top: 15px;
}
#pictures {
  margin-top: 15px;
}
#contact {
  margin-top: 15px;
  text-align: center;
}

#yui-history-iframe {
  position:absolute;
  top:0; left:0;
  width:1px; height:1px; /* avoid scrollbars */
  visibility:hidden;
}

</style>

</head>

<body class="yui-skin-sam">
<iframe id="yui-history-iframe" src="yui/build/history/assets/blank.html"></iframe> 
<input id="yui-history-field" type="hidden">
<div id="doc">
  <div id="hd"><img src="rick-test-banner-08.jpg"/></div>
  <div id="bd">

    <div id="ricktabs" class="yui-navset yui-navset-top">
        <ul class="yui-nav">
            <li><a href="#bio"><em>Bio</em></a></li>
            <li><a href="#blog"><em>Blog</em></a></li>
            <li><a href="#tech"><em>Tech</em></a></li>
            <li><a href="#sports"><em>Sports</em></a></li>
            <li><a href="#pictures"><em>Pictures</em></a></li>
            <li class="selected"><a href="#contact"><em>Contact</em></a></li>
        </ul>            
        <div class="yui-content">
            <div id="bio">
[% INSERT bio.tmpl %]
            </div>
            <div id="blog">
[% INSERT blog.tmpl %]
            </div>
            <div id="tech">
[% INSERT tech.tmpl %]
            </div>
            <div id="sports">
[% INSERT sports.tmpl %]
            </div>
            <div id="pictures">
[% INSERT pictures.tmpl %]
            </div>
            <div id="contact">
[% INSERT contact.tmpl %]
            </div>
        </div>
    </div>

  </div>
  <div id="ft">
    <small>
[% INSERT footer.tmpl %]
    </small>
  </div>
</div>
<script>

// Hi. OK. You want to understand how I did the NIFTY tabbed interface with bookmarking
// capability. I used ALL OF THE CODE here:
// 
// http://com4.devnet.re3.yahoo.com/yui/examples/history/history-tabview.html
// http://com4.devnet.re3.yahoo.com/yui/examples/history/history-tabview_clean.html
// 
// I did modify it to "taste" (I didn't like tab0, and keying off the index).
//
// Rick Umali 2007-12-15

(function () {

    function TabStateToID(s) {
	var tab_id = 5; 
	switch(s) {
	  case 'bio':
	  tab_id = 0;
	  break;
	  case 'blog':
	  tab_id = 1;
	  break;
	  case 'tech':
	  tab_id = 2;
	  break;
	  case 'sports':
	  tab_id = 3;
	  break;
	  case 'pictures':
	  tab_id = 4;
	  break;
	  case 'contact':
	  tab_id = 5;
	  break;
	  default:
	  tab_id = 5;
	  break;
	}
	return tab_id;
    }

    var bookmarkedTabViewState = YAHOO.util.History.getBookmarkedState("tab"); 
    var initialTabViewState = bookmarkedTabViewState || "contact";

    var tabView;

    YAHOO.util.History.register("tab", initialTabViewState, function (state) {
        // Select the tab according to the "state" parameter:
        tabView.set("activeIndex", TabStateToID(state));
    });

    function handleTabViewActiveTabChange (e) {
        var newState, currentState;
	var tab = this.getTab(this.getTabIndex(e.newValue));

        newState = tab.get("href").substr(1); // NOTE: Remove '#'
    
        try {
            currentState = YAHOO.util.History.getCurrentState("tab");
            // The following test is crucial. Otherwise, we end up circling forever.
            // Indeed, YAHOO.util.History.navigate will call the module onStateChange
            // callback, which will call tabView.set, which will call this handler
            // and it keeps going from here...
            if (newState != currentState) {
                YAHOO.util.History.navigate("tab", newState);
            }
        } catch (e) {
            tabView.set("activeIndex", TabStateToID(newState));
        }
    
    }

    function initTabView () {
        // Instantiate the TabView control...
        tabView = new YAHOO.widget.TabView("ricktabs");
        tabView.addListener("activeTabChange", handleTabViewActiveTabChange);
        console.log("initTabView: %d", tabView.get("activeIndex"));
    }

    YAHOO.util.History.onReady(function () {
        var currentState;
    
        initTabView();
    
        // This is the tricky part... The onLoad event is fired when the user
        // comes back to the page using the back button. In this case, the
        // actual tab that needs to be selected corresponds to the last tab
        // selected before leaving the page, and not the initially selected tab.
        // This can be retrieved using getCurrentState:
        currentState = YAHOO.util.History.getCurrentState("tab");
        tabView.set("activeIndex", TabStateToID(currentState)); // XXX
    });

    // Initialize the browser history management library.
    try {
        YAHOO.util.History.initialize("yui-history-field", "yui-history-iframe");
    } catch (e) {
        // The only exception that gets thrown here is when the browser is
        // not supported (Opera, or not A-grade). Degrade gracefully.
        initTabView();
    }

})();

</script>

</body>

